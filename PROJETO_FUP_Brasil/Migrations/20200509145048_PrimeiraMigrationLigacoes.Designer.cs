// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROJETO_FUP_Brasil.Data;

namespace PROJETO_FUP_Brasil.Migrations
{
    [DbContext(typeof(PROJETO_FUP_BrasilContext))]
    [Migration("20200509145048_PrimeiraMigrationLigacoes")]
    partial class PrimeiraMigrationLigacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForeignKey_Email.Email", b =>
                {
                    b.Property<int>("Id_Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<string>("_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Email");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Email");
                });

            modelBuilder.Entity("PROJETO_FUP_Brasil.Models.Cursos", b =>
                {
                    b.Property<int>("Id_Curso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("ProfessorCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<double>("ValorCurso")
                        .HasColumnType("float");

                    b.HasKey("Id_Curso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("PROJETO_FUP_Brasil.Models.Financeiro", b =>
                {
                    b.Property<int>("FinanceiroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoID")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("FinanceiroId");

                    b.HasIndex("AlunoID")
                        .IsUnique();

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Financeiro");
                });

            modelBuilder.Entity("PROJETO_FUP_Brasil.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalarioFuncionario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Remake_FUP.Models.Aluno", b =>
                {
                    b.Property<int>("Id_Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("CursosID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datanascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("Id_Matricula");

                    b.HasIndex("CursosID")
                        .IsUnique();

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Remake_FUP.Models.Telefone", b =>
                {
                    b.Property<int>("Id_Telefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<string>("_Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Telefone");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("ForeignKey_Email.Email", b =>
                {
                    b.HasOne("PROJETO_FUP_Brasil.Models.Funcionario", "Funcionario")
                        .WithOne("Email")
                        .HasForeignKey("ForeignKey_Email.Email", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Remake_FUP.Models.Aluno", "Aluno")
                        .WithOne("Email")
                        .HasForeignKey("ForeignKey_Email.Email", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PROJETO_FUP_Brasil.Models.Financeiro", b =>
                {
                    b.HasOne("Remake_FUP.Models.Aluno", "Aluno")
                        .WithOne("Financeiro")
                        .HasForeignKey("PROJETO_FUP_Brasil.Models.Financeiro", "AlunoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJETO_FUP_Brasil.Models.Funcionario", "Funcionario")
                        .WithOne("Financeiro")
                        .HasForeignKey("PROJETO_FUP_Brasil.Models.Financeiro", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Remake_FUP.Models.Aluno", b =>
                {
                    b.HasOne("PROJETO_FUP_Brasil.Models.Cursos", "Cursos")
                        .WithOne("Aluno")
                        .HasForeignKey("Remake_FUP.Models.Aluno", "CursosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Remake_FUP.Models.Telefone", b =>
                {
                    b.HasOne("PROJETO_FUP_Brasil.Models.Funcionario", "Funcionario")
                        .WithOne("Telefone")
                        .HasForeignKey("Remake_FUP.Models.Telefone", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Remake_FUP.Models.Aluno", "Aluno")
                        .WithOne("Telefone")
                        .HasForeignKey("Remake_FUP.Models.Telefone", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
